#	#	SPECIAL_SYMBOL	(Line 1)
include	include	IDENTIFIER	(Line 1)
<	<	OPERATOR	(Line 1)
stdio	stdio	IDENTIFIER	(Line 1)
.	.	SPECIAL_SYMBOL	(Line 1)
h	h	IDENTIFIER	(Line 1)
>	>	OPERATOR	(Line 1)
int	int	KEYWORD	(Line 3)
main	main	IDENTIFIER	(Line 3)
(	(	SPECIAL_SYMBOL	(Line 3)
)	)	SPECIAL_SYMBOL	(Line 3)
{	{	SPECIAL_SYMBOL	(Line 3)
int	int	KEYWORD	(Line 4)
x	x	IDENTIFIER	(Line 4)
=	=	OPERATOR	(Line 4)
10	10	CONSTANT (int)	(Line 4)
,	,	SPECIAL_SYMBOL	(Line 4)
y	y	IDENTIFIER	(Line 4)
=	=	OPERATOR	(Line 4)
20	20	CONSTANT (int)	(Line 4)
;	;	SPECIAL_SYMBOL	(Line 4)
;	;	SPECIAL_SYMBOL	(Line 4)
float	float	KEYWORD	(Line 5)
z	z	IDENTIFIER	(Line 5)
=	=	OPERATOR	(Line 5)
3.14e-2	3.14e-2	CONSTANT (float)	(Line 5)
char	char	KEYWORD	(Line 6)
c	c	IDENTIFIER	(Line 6)
=	=	OPERATOR	(Line 6)
'a'	'a'	CONSTANT (char)	(Line 6)
;	;	SPECIAL_SYMBOL	(Line 6)
if	if	KEYWORD	(Line 8)
(	(	SPECIAL_SYMBOL	(Line 8)
(	(	SPECIAL_SYMBOL	(Line 8)
x	x	IDENTIFIER	(Line 8)
!=	!=	OPERATOR	(Line 8)
y	y	IDENTIFIER	(Line 8)
)	)	SPECIAL_SYMBOL	(Line 8)
)	)	SPECIAL_SYMBOL	(Line 8)
{	{	SPECIAL_SYMBOL	(Line 8)
z	z	IDENTIFIER	(Line 9)
+=	+=	OPERATOR	(Line 9)
x	x	IDENTIFIER	(Line 9)
*	*	OPERATOR	(Line 9)
y	y	IDENTIFIER	(Line 9)
;	;	SPECIAL_SYMBOL	(Line 9)
;	;	SPECIAL_SYMBOL	(Line 9)
printf	printf	IDENTIFIER	(Line 10)
(	(	SPECIAL_SYMBOL	(Line 10)
"Hello\n"	"Hello\n"	CONSTANT (string)	(Line 10)
)	)	SPECIAL_SYMBOL	(Line 10)
;	;	SPECIAL_SYMBOL	(Line 10)
}	}	SPECIAL_SYMBOL	(Line 11)
if	if	KEYWORD	(Line 13)
(	(	SPECIAL_SYMBOL	(Line 13)
x	x	IDENTIFIER	(Line 13)
>	>	OPERATOR	(Line 13)
5	5	CONSTANT (int)	(Line 13)
&&	&&	OPERATOR	(Line 14)
y	y	IDENTIFIER	(Line 14)
<	<	OPERATOR	(Line 14)
15	15	CONSTANT (int)	(Line 14)
)	)	SPECIAL_SYMBOL	(Line 14)
)	)	SPECIAL_SYMBOL	(Line 14)
{	{	SPECIAL_SYMBOL	(Line 14)
x	x	IDENTIFIER	(Line 15)
=	=	OPERATOR	(Line 15)
x	x	IDENTIFIER	(Line 15)
+	+	OPERATOR	(Line 15)
+	+	OPERATOR	(Line 15)
y	y	IDENTIFIER	(Line 15)
;	;	SPECIAL_SYMBOL	(Line 15)
y	y	IDENTIFIER	(Line 16)
20	20	CONSTANT (int)	(Line 16)
;	;	SPECIAL_SYMBOL	(Line 16)
}	}	SPECIAL_SYMBOL	(Line 17)
return	return	KEYWORD	(Line 19)
0	0	CONSTANT (int)	(Line 19)
;	;	SPECIAL_SYMBOL	(Line 19)
}	}	SPECIAL_SYMBOL	(Line 20)
